<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ARS_Studio">

    <!-- Stile per MenuItem (Si applica a button) -->
    <Style x:Key="MenuItemW" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="10,0,0,0"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="30"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="border" Background="{TemplateBinding Background}">
                        <Border x:Name="Over" Background="{DynamicResource BlueLinearGradient}" Opacity="0"/>
                        <ContentPresenter x:Name="contentPresenter" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Focusable="False" RecognizesAccessKey="True"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard Storyboard="{StaticResource OverMouseEnter}"/>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="PreviewMouseDown">
                            <BeginStoryboard Storyboard="{StaticResource OverMouseDown}"/>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="PreviewMouseUp">
                            <BeginStoryboard Storyboard="{StaticResource OverMouseEnter}"/>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard Storyboard="{StaticResource OverMouseLeave}"/>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Stile per Bottone semplice (Si applica a button) -->
    <Style x:Key="ButtonW" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{DynamicResource ColorWhite}"/>
        <Setter Property="Foreground" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Height" Value="26"/>
        
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="14" Background="{TemplateBinding Background}">
                        <Grid>
                            <Border x:Name="Over" Background="{DynamicResource BlueLinearGradient}" Opacity="0" CornerRadius="{Binding Path=CornerRadius, ElementName=border}"/>
                            <ContentPresenter x:Name="contentPresenter" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Focusable="False" RecognizesAccessKey="True"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard Storyboard="{StaticResource OverMouseEnter}"/>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="PreviewMouseDown">
                            <BeginStoryboard Storyboard="{StaticResource OverMouseDown}"/>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="PreviewMouseUp">
                            <BeginStoryboard Storyboard="{StaticResource OverMouseEnter}"/>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard Storyboard="{StaticResource OverMouseLeave}"/>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Stile per Bottone dei button colore del cubo (Si applica a button) -->
    <Style x:Key="ButtonColorW" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{DynamicResource ColorCubeEmpty}"/>
        <Setter Property="Foreground" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Width" Value="26"/>
        <Setter Property="Height" Value="26"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="4" Background="{TemplateBinding Background}" Width="26" Height="26">
                        <Border x:Name="Over" Background="Black" Opacity="0" CornerRadius="{Binding Path=CornerRadius, ElementName=border}"/>
                        <!--<ContentPresenter x:Name="contentPresenter" VerticalAlignment="Center" HorizontalAlignment="Center" Focusable="False" RecognizesAccessKey="True"/>-->
                    </Border>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard Storyboard="{StaticResource OverMouseEnter}"/>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="PreviewMouseDown">
                            <BeginStoryboard Storyboard="{StaticResource OverMouseDown}"/>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="PreviewMouseUp">
                            <BeginStoryboard Storyboard="{StaticResource OverMouseEnter}"/>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard Storyboard="{StaticResource OverMouseLeave}"/>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Stile per Bottone Tab nel menu (Si applica a button) -->
    <Style x:Key="ButtonTabW" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{DynamicResource ColorWhite}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Padding" Value="0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}">
                        <Grid>
                            <Border x:Name="Over" Background="White" Opacity="0" CornerRadius="{Binding Path=CornerRadius, ElementName=border}"/>
                            <ContentPresenter x:Name="contentPresenter" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Focusable="False" RecognizesAccessKey="True"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard Storyboard="{StaticResource OverMouseEnter}"/>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="PreviewMouseDown">
                            <BeginStoryboard Storyboard="{StaticResource OverMouseDown}"/>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="PreviewMouseUp">
                            <BeginStoryboard Storyboard="{StaticResource OverMouseEnter}"/>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard Storyboard="{StaticResource OverMouseLeave}"/>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Stile per Bottone nella ControlBox (Si applica a button) -->
    <Style x:Key="ButtonControlW" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{DynamicResource ColorWhite}"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="8">
                        <Grid>
                            <Border x:Name="Over" Background="Black" Opacity="0" CornerRadius="{Binding Path=CornerRadius, ElementName=border}"/>
                            <ContentPresenter x:Name="contentPresenter" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Focusable="False" RecognizesAccessKey="True"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard Storyboard="{StaticResource OverMouseEnter}"/>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="PreviewMouseDown">
                            <BeginStoryboard Storyboard="{StaticResource OverMouseDown}"/>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="PreviewMouseUp">
                            <BeginStoryboard Storyboard="{StaticResource OverMouseEnter}"/>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard Storyboard="{StaticResource OverMouseLeave}"/>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Stile per i Picker nella schermata scansione (Si applica a button) -->
    <Style x:Key="ButtonPickerW" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{x:Null}"/>
        <Setter Property="Background" Value="{DynamicResource ColorWhite}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ColorCubeEmpty}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Width" Value="10"/>
        <Setter Property="Height" Value="10"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="5" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" RenderTransformOrigin="0.5,0.5">
                        <Border.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                            </TransformGroup>
                        </Border.RenderTransform>
                    </Border>

                    <!--<Grid>
                            <Border x:Name="Over" Background="Black" Opacity="0" CornerRadius="{Binding Path=CornerRadius, ElementName=border}"/>
                            <ContentPresenter x:Name="contentPresenter" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Focusable="False" RecognizesAccessKey="True"/>
                        </Grid>
                    </Border>-->

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard Storyboard="{StaticResource PickerMouseEnter}"/>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="PreviewMouseDown">
                            <BeginStoryboard Storyboard="{StaticResource PickerMouseDown}"/>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="PreviewMouseUp">
                            <BeginStoryboard Storyboard="{StaticResource PickerMouseEnter}"/>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard Storyboard="{StaticResource PickerMouseLeave}"/>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
</ResourceDictionary>